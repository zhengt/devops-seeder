<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zheng.devops.jenkins</groupId>
	<artifactId>devops-seeder</artifactId>
	<version>0.1.0-SNAPSHOT</version>

	<name>SAP CP Piper Library</name>
	<description>Shared library containing steps and utilities to set up continuous deployment processes for SAP technologies.</description>
	<url>https://github.com/zhengt/devops-seeder</url>

	<properties>
		<jenkins.version>2.63</jenkins.version>
		<pipeline.version>2.5</pipeline.version>
		<job-dsl-version>1.67</job-dsl-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.main</groupId>
			<artifactId>jenkins-test-harness</artifactId>
			<version>2.15</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.main</groupId>
			<artifactId>jenkins-core</artifactId>
			<version>${jenkins.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.main</groupId>
			<artifactId>jenkins-war</artifactId>
			<version>${jenkins.version}</version>
			<classifier>war-for-test</classifier>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.workflow</groupId>
			<artifactId>workflow-step-api</artifactId>
			<version>2.14</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.workflow</groupId>
			<artifactId>workflow-support</artifactId>
			<version>2.18</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.workflow</groupId>
			<artifactId>workflow-scm-step</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.workflow</groupId>
			<artifactId>workflow-cps-global-lib</artifactId>
			<version>2.7</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins.workflow</groupId>
			<artifactId>workflow-cps</artifactId>
			<version>2.43</version>
		</dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-aggregator</artifactId>
            <version>2.5</version>
        </dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>job-dsl-core</artifactId>
			<version>${job-dsl-version}</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>job-dsl</artifactId>
			<version>${job-dsl-version}</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>structs</artifactId>
			<version>1.13</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>junit</artifactId>
			<version>1.24</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>gradle</artifactId>
			<version>1.28</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>cloudbees-folder</artifactId>
			<version>5.12</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>ghprb</artifactId>
			<version>1.31.4</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>git</artifactId>
			<version>3.8.0</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>token-macro</artifactId>
			<version>2.3</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>matrix-project</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>script-security</artifactId>
			<version>1.42</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>plain-credentials</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>git-client</artifactId>
			<version>2.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>credentials</artifactId>
			<version>2.1.16</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.13</version>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>1.1-groovy-2.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.19</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.2.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>test/groovy</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<sources>
						<source>
							<directory>${project.basedir}/src/main/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</source>
						<source>
							<directory>${project.basedir}/src/jobs</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</source>
					</sources>
					<testSources>
						<testSource>
							<directory>${project.basedir}/src/test/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</testSource>
					</testSources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jenkins-ci.tools</groupId>
				<artifactId>maven-hpi-plugin</artifactId>
				<version>1.121</version>
				<executions>
					<execution>
						<id>resolve-test-dependencies</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>resolve-test-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- The gmavenplus plugin is used to compile Groovy code. To learn more 
					about this plugin, visit https://github.com/groovy/GMavenPlus/wiki -->
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<goals>
							<goal>addSources</goal>
							<goal>addTestSources</goal>
							<goal>compile</goal>
							<goal>compileTests</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<sources>
						<source>
							<directory>${project.basedir}/src/main/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</source>
						<source>
							<directory>${project.basedir}/src/jobs</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</source>
					</sources>
					<testSources>
						<testSource>
							<directory>${project.basedir}/src/test/groovy</directory>
							<includes>
								<include>**/*.groovy</include>
							</includes>
						</testSource>
					</testSources>
				</configuration>
			</plugin>

			<!-- Optional plugins for using Spock -->
			<!-- Only required if names of spec classes don't match default Surefire 
				patterns (`*Test` etc.) -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<useFile>false</useFile>
					<includes>
						<include>**/*Spec.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<!-- UNIT TESTS -->
					<!-- http://www.eclemma.org/jacoco/trunk/doc/maven.html Default settings 
						propertyName: argLine destFile: ${project.build.directory}/jacoco.exec dataFile: 
						${project.build.directory}/jacoco.exec outputDirectory: ${project.reporting.outputDirectory}/jacoco -->
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<!-- INTEGRATION TESTS -->
					<!-- http://www.eclemma.org/jacoco/trunk/doc/maven.html Default settings 
						propertyName: argLine destFile: ${project.build.directory}/jacoco-it.exec 
						dataFile: ${project.build.directory}/jacoco-it.exec outputDirectory: ${project.reporting.outputDirectory}/jacoco-it -->
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmavenplus
										</groupId>
										<artifactId>
											gmavenplus-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>compileTests</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>nexus-repository</id>
			<url>${env.nexus_url}</url>
		</repository>
	</distributionManagement>
</project>
